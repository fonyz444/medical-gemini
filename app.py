
import streamlit as st
import base64
import os
from dotenv import load_dotenv
import google.generativeai as genai
import tempfile
import PIL.Image

load_dotenv()

GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")
if not GOOGLE_API_KEY:
    st.error("üîë API-–∫–ª—é—á Gemini –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π GOOGLE_API_KEY")
    st.stop()

try:
    genai.configure(api_key=GOOGLE_API_KEY)
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ API Gemini: {str(e)}")
    st.stop()

sample_prompt = """–¢—ã ‚Äî –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π –≤—Ä–∞—á –∏ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –≤ –≤–µ–¥—É—â–µ–º –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ç–æ–ª–æ–≥–∏–∏ –∏–ª–∏ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è, –∏ –≤—ã–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á—ë—Ç.

–ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º—É —Ç–µ–ª—É –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Äî –ø—Ä—è–º–æ —É–∫–∞–∂–∏ —ç—Ç–æ.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:

1) –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚Äî –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ö–¢ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏, –ú–†–¢ –º–æ–∑–≥–∞ –∏ —Ç. –ø.).
2) –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è ‚Äî –ø–µ—Ä–µ—á–∏—Å–ª–∏ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç –Ω–æ—Ä–º—ã.
3) –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã ‚Äî —É–∫–∞–∂–∏ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏¬ª, ¬´–≤–µ—Ä–æ—è—Ç–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç¬ª).
4) –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ‚Äî –æ–ø–∏—à–∏, –∫–∞–∫–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∏–æ–ø—Å–∏—è, –∞–Ω–∞–ª–∏–∑—ã, –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ), –∞ —Ç–∞–∫–∂–µ –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç—É.
5) –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –≤ –∫–æ–Ω—Ü–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤—å: ¬´–ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ —Ä–µ—à–µ–Ω–∏—è¬ª.
6) –ï—Å–ª–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî —á–µ—Å—Ç–Ω–æ —É–∫–∞–∂–∏: ¬´–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è¬ª."""


if 'uploaded_file' not in st.session_state:
    st.session_state.uploaded_file = None
if 'result' not in st.session_state:
    st.session_state.result = None

def call_gemini_for_analysis(image_path, prompt=sample_prompt):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é Gemini"""
    try:

        image = PIL.Image.open(image_path)

        try:

            model = genai.GenerativeModel('gemini-1.5-flash')
            response = model.generate_content([prompt, image])
            return response.text
        except Exception as e:
            if "429" in str(e) or "quota" in str(e).lower():

                st.warning("–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ –¥–ª—è –º–æ–¥–µ–ª–∏ gemini-1.5-flash. –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å.")
                try:
                    model = genai.GenerativeModel('gemini-pro-vision')
                    response = model.generate_content([prompt, image])
                    return response.text
                except Exception as e2:
                    raise Exception(f"–û—à–∏–±–∫–∞ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é: {str(e2)}") 
            else:
                raise e
    except Exception as e:
        error_msg = str(e)
        if "429" in error_msg or "quota" in error_msg.lower():
            return """
            ### ‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API Gemini
            
            –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–≤–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Gemini. –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:
            
            1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (–æ–±—ã—á–Ω–æ –∫–≤–æ—Ç–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥ –∏–ª–∏ 24 —á–∞—Å–∞)
            2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ Google AI Studio
            3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π API-–∫–ª—é—á
            
            –ü–æ–¥—Ä–æ–±–Ω–µ–µ: [–õ–∏–º–∏—Ç—ã API Gemini](https://ai.google.dev/gemini-api/docs/rate-limits)
            """
        else:
            return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {error_msg}"

def chat_eli5(query):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    try:
        eli5_prompt = "–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—è—Ç–∏–ª–µ—Ç–Ω–µ–º—É —Ä–µ–±–µ–Ω–∫—É. \n" + query
        
        try:
            model = genai.GenerativeModel('gemini-1.5-flash')
            response = model.generate_content(eli5_prompt)
            return response.text
        except Exception as e:
            if "429" in str(e) or "quota" in str(e).lower():
                st.warning("–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ –¥–ª—è –º–æ–¥–µ–ª–∏ gemini-1.5-flash. –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å.")
                try:
                    model = genai.GenerativeModel('gemini-pro')
                    response = model.generate_content(eli5_prompt)
                    return response.text
                except Exception as e2:
                    raise Exception(f"–û—à–∏–±–∫–∞ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é: {str(e2)}")
            else:
                raise e
    except Exception as e:
        error_msg = str(e)
        if "429" in error_msg or "quota" in error_msg.lower():
            return """
            ### ‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API Gemini
            
            –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–≤–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Gemini. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–π –ø–ª–∞–Ω.
            """
        else:
            return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–æ—â–µ–Ω–∏–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è: {error_msg}"


st.title("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Gemini")

with st.expander("–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"):
    st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å –ø–æ–º–æ—â—å—é Google Gemini.")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png"])


if uploaded_file is not None:
    with tempfile.NamedTemporaryFile(delete=False, suffix=os.path.splitext(uploaded_file.name)[1]) as tmp_file:
        tmp_file.write(uploaded_file.getvalue())
        st.session_state['filename'] = tmp_file.name

    st.image(uploaded_file, caption='–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')

# –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
if st.button('–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'):
    if 'filename' in st.session_state and os.path.exists(st.session_state['filename']):
        with st.spinner('–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...'):
            result = call_gemini_for_analysis(st.session_state['filename'])
            st.session_state['result'] = result
        
        if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API Gemini" in result:
            st.error(result)
            st.info("""
            ### –†–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–≤–æ—Ç–æ–π:
            
            1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞
            2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API-–∫–ª—é—á –≤ [Google AI Studio](https://makersuite.google.com/app/apikey)
            3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ
            """)
        else:
            st.markdown(result, unsafe_allow_html=True)
        
        if os.path.exists(st.session_state['filename']):
            os.unlink(st.session_state['filename'])

# –û–±—ä—è—Å–Ω–µ–Ω–∏–µ ELI5
if 'result' in st.session_state and st.session_state['result']:
    if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API Gemini" not in st.session_state['result']:
        st.info("–ù–∏–∂–µ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ.")
        if st.radio("ELI5 - –û–±—ä—è—Å–Ω–∏—Ç—å –∫–∞–∫ –ø—è—Ç–∏–ª–µ—Ç–Ω–µ–º—É", ('–ù–µ—Ç', '–î–∞')) == '–î–∞':
            with st.spinner('–ì–æ—Ç–æ–≤–∏–º —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ...'):
                simplified_explanation = chat_eli5(st.session_state['result'])
                
                if "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API Gemini" in simplified_explanation:
                    st.error(simplified_explanation)
                else:
                    st.markdown(simplified_explanation, unsafe_allow_html=True)